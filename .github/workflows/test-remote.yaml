name: Remote e2e tests

on:
  - workflow_dispatch

jobs:
  refine-vite:
    runs-on: ubuntu-latest
    name: Vite
    concurrency:
      group: ${{ github.ref }}-e2e-remote-vite-${{ matrix.data_provider }}-${{ matrix.ui_framework }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        data_provider:
          [
            custom-json-rest,
            strapi-v4,
            nestjsx-crud,
            airtable,
            supabase,
            appwrite,
            hasura,
          ]
        ui_framework: [antd, mui, no]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install
        run: npm install
      - name: Download Example
        id: download_step
        run: node ./.github/workflows/build-remote.js
        env:
          FRAMEWORK: vite
          CI_USER_AGENT: ${{ secrets.CI_USER_AGENT }}
          DATA_PROVIDER: ${{ matrix.data_provider }}
          UI_FRAMEWORK: ${{ matrix.ui_framework }}
      - name: Install & Build Deps
        run: |
          cd ${{ steps.download_step.outputs.project_path }}
          npm install
          npm run build
          npm run preview -- --port 3000 --host &
      - name: Run Cypress on local
        uses: cypress-io/github-action@v6
        with:
          install: false
          record: true
          start: "npm ls"
          wait-on: "http://localhost:3000"
          group: e2e-remote-vite-${{ matrix.data_provider }}-${{ matrix.ui_framework }}-${{ steps.download_step.outputs.auth_provider }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CYPRESS_USER_AGENT: ${{ secrets.CI_USER_AGENT }}
          CYPRESS_FRAMEWORK: vite
          CYPRESS_DATA_PROVIDER: ${{ matrix.data_provider }}
          CYPRESS_UI_FRAMEWORK: ${{ matrix.ui_framework }}
          CYPRESS_AUTH_PROVIDER: ${{ steps.download_step.outputs.auth_provider }}
  refine-nextjs:
    runs-on: ubuntu-latest
    name: NextJS
    concurrency:
      group: ${{ github.ref }}-e2e-remote-nextjs-${{ matrix.data_provider }}-${{ matrix.ui_framework }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        data_provider:
          [
            custom-json-rest,
            strapi-v4,
            nestjsx-crud,
            airtable,
            supabase,
            appwrite,
            hasura,
          ]
        ui_framework: [antd, mui, no]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install
        run: npm install
      - name: Download Example
        id: download_step
        run: node ./.github/workflows/build-remote.js
        env:
          FRAMEWORK: nextjs
          CI_USER_AGENT: ${{ secrets.CI_USER_AGENT }}
          DATA_PROVIDER: ${{ matrix.data_provider }}
          UI_FRAMEWORK: ${{ matrix.ui_framework }}
      - name: Install & Build Deps
        run: |
          rm -rf .eslintrc .prettierrc
          cd ${{ steps.download_step.outputs.project_path }}
          npm install
          npm run build
          npm run start &
      - name: Run Cypress on local
        uses: cypress-io/github-action@v6
        with:
          install: false
          record: true
          start: "npm ls"
          wait-on: "http://localhost:3000"
          group: e2e-remote-nextjs-${{ matrix.data_provider }}-${{ matrix.ui_framework }}-${{ steps.download_step.outputs.auth_provider }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CYPRESS_USER_AGENT: ${{ secrets.CI_USER_AGENT }}
          CYPRESS_FRAMEWORK: nextjs
          CYPRESS_DATA_PROVIDER: ${{ matrix.data_provider }}
          CYPRESS_UI_FRAMEWORK: ${{ matrix.ui_framework }}
          CYPRESS_AUTH_PROVIDER: ${{ steps.download_step.outputs.auth_provider }}
  refine-remix:
    runs-on: ubuntu-latest
    name: Remix
    concurrency:
      group: ${{ github.ref }}-e2e-remote-remix-${{ matrix.data_provider }}-${{ matrix.ui_framework }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        data_provider:
          [
            custom-json-rest,
            strapi-v4,
            nestjsx-crud,
            airtable,
            supabase,
            appwrite,
            hasura,
          ]
        ui_framework: [antd, mui, no]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install
        run: npm install
      - name: Download Example
        id: download_step
        run: node ./.github/workflows/build-remote.js
        env:
          FRAMEWORK: remix
          CI_USER_AGENT: ${{ secrets.CI_USER_AGENT }}
          DATA_PROVIDER: ${{ matrix.data_provider }}
          UI_FRAMEWORK: ${{ matrix.ui_framework }}
      - name: Install & Build Deps
        run: |
          cd ${{ steps.download_step.outputs.project_path }}
          npm install
          npm run build
          HOST=0.0.0.0 npm run start &
      - name: Run Cypress on local
        uses: cypress-io/github-action@v6
        with:
          install: false
          record: true
          start: "npm ls"
          wait-on: "http://localhost:3000"
          group: e2e-remote-remix-${{ matrix.data_provider }}-${{ matrix.ui_framework }}-${{ steps.download_step.outputs.auth_provider }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CYPRESS_USER_AGENT: ${{ secrets.CI_USER_AGENT }}
          CYPRESS_FRAMEWORK: remix
          CYPRESS_DATA_PROVIDER: ${{ matrix.data_provider }}
          CYPRESS_UI_FRAMEWORK: ${{ matrix.ui_framework }}
          CYPRESS_AUTH_PROVIDER: ${{ steps.download_step.outputs.auth_provider }}
